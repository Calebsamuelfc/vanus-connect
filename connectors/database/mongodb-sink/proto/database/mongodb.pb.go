// Copyright 2022 Linkall Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: database/mongodb.proto

package proto

import (
	base "github.com/linkall-labs/connector/proto/base"
	database "github.com/linkall-labs/connector/proto/database"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// https://www.mongodb.com/docs/manual/reference/change-events/
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *base.Metadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Op       database.Operation `protobuf:"varint,2,opt,name=op,proto3,enum=linkall.connectors.proto.database.Operation" json:"op,omitempty"`
	Raw      *database.Raw      `protobuf:"bytes,3,opt,name=raw,proto3" json:"raw,omitempty"`
	Insert   *InsertEvent       `protobuf:"bytes,4,opt,name=insert,proto3" json:"insert,omitempty"`
	Update   *UpdateEvent       `protobuf:"bytes,5,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_mongodb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_database_mongodb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_database_mongodb_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetMetadata() *base.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetOp() database.Operation {
	if x != nil {
		return x.Op
	}
	return database.Operation_UNKNOWN
}

func (x *Event) GetRaw() *database.Raw {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *Event) GetInsert() *InsertEvent {
	if x != nil {
		return x.Insert
	}
	return nil
}

func (x *Event) GetUpdate() *UpdateEvent {
	if x != nil {
		return x.Update
	}
	return nil
}

// fullDocument
// https://www.mongodb.com/docs/manual/reference/change-events/insert/#mongodb-data-insert
type InsertEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document *structpb.Struct `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *InsertEvent) Reset() {
	*x = InsertEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_mongodb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertEvent) ProtoMessage() {}

func (x *InsertEvent) ProtoReflect() protoreflect.Message {
	mi := &file_database_mongodb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertEvent.ProtoReflect.Descriptor instead.
func (*InsertEvent) Descriptor() ([]byte, []int) {
	return file_database_mongodb_proto_rawDescGZIP(), []int{1}
}

func (x *InsertEvent) GetDocument() *structpb.Struct {
	if x != nil {
		return x.Document
	}
	return nil
}

// https://www.mongodb.com/docs/manual/reference/change-events/update/#mongodb-data-update
type UpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateDescription *UpdateDescription `protobuf:"bytes,1,opt,name=updateDescription,proto3" json:"updateDescription,omitempty"`
}

func (x *UpdateEvent) Reset() {
	*x = UpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_mongodb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEvent) ProtoMessage() {}

func (x *UpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_database_mongodb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEvent.ProtoReflect.Descriptor instead.
func (*UpdateEvent) Descriptor() ([]byte, []int) {
	return file_database_mongodb_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateEvent) GetUpdateDescription() *UpdateDescription {
	if x != nil {
		return x.UpdateDescription
	}
	return nil
}

type UpdateDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemovedFields   *structpb.ListValue `protobuf:"bytes,1,opt,name=removedFields,proto3" json:"removedFields,omitempty"`
	TruncatedArrays *structpb.ListValue `protobuf:"bytes,2,opt,name=truncatedArrays,proto3" json:"truncatedArrays,omitempty"`
	UpdatedFields   *structpb.Struct    `protobuf:"bytes,3,opt,name=updatedFields,proto3" json:"updatedFields,omitempty"`
}

func (x *UpdateDescription) Reset() {
	*x = UpdateDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_mongodb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDescription) ProtoMessage() {}

func (x *UpdateDescription) ProtoReflect() protoreflect.Message {
	mi := &file_database_mongodb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDescription.ProtoReflect.Descriptor instead.
func (*UpdateDescription) Descriptor() ([]byte, []int) {
	return file_database_mongodb_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDescription) GetRemovedFields() *structpb.ListValue {
	if x != nil {
		return x.RemovedFields
	}
	return nil
}

func (x *UpdateDescription) GetTruncatedArrays() *structpb.ListValue {
	if x != nil {
		return x.TruncatedArrays
	}
	return nil
}

func (x *UpdateDescription) GetUpdatedFields() *structpb.Struct {
	if x != nil {
		return x.UpdatedFields
	}
	return nil
}

var File_database_mongodb_proto protoreflect.FileDescriptor

var file_database_mongodb_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c,
	0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x02,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x61, 0x6c, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x02, 0x6f, 0x70, 0x12, 0x38, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x61, 0x77, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x40,
	0x0a, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x12, 0x40, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x42, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x33, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x74,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0f, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x42, 0x4f, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2d, 0x6c, 0x61, 0x62,
	0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_database_mongodb_proto_rawDescOnce sync.Once
	file_database_mongodb_proto_rawDescData = file_database_mongodb_proto_rawDesc
)

func file_database_mongodb_proto_rawDescGZIP() []byte {
	file_database_mongodb_proto_rawDescOnce.Do(func() {
		file_database_mongodb_proto_rawDescData = protoimpl.X.CompressGZIP(file_database_mongodb_proto_rawDescData)
	})
	return file_database_mongodb_proto_rawDescData
}

var file_database_mongodb_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_database_mongodb_proto_goTypes = []interface{}{
	(*Event)(nil),              // 0: linkall.connectors.database.Event
	(*InsertEvent)(nil),        // 1: linkall.connectors.database.InsertEvent
	(*UpdateEvent)(nil),        // 2: linkall.connectors.database.UpdateEvent
	(*UpdateDescription)(nil),  // 3: linkall.connectors.database.UpdateDescription
	(*base.Metadata)(nil),      // 4: linkall.connectors.base.Metadata
	(database.Operation)(0),    // 5: linkall.connectors.proto.database.Operation
	(*database.Raw)(nil),       // 6: linkall.connectors.proto.database.Raw
	(*structpb.Struct)(nil),    // 7: google.protobuf.Struct
	(*structpb.ListValue)(nil), // 8: google.protobuf.ListValue
}
var file_database_mongodb_proto_depIdxs = []int32{
	4,  // 0: linkall.connectors.database.Event.metadata:type_name -> linkall.connectors.base.Metadata
	5,  // 1: linkall.connectors.database.Event.op:type_name -> linkall.connectors.proto.database.Operation
	6,  // 2: linkall.connectors.database.Event.raw:type_name -> linkall.connectors.proto.database.Raw
	1,  // 3: linkall.connectors.database.Event.insert:type_name -> linkall.connectors.database.InsertEvent
	2,  // 4: linkall.connectors.database.Event.update:type_name -> linkall.connectors.database.UpdateEvent
	7,  // 5: linkall.connectors.database.InsertEvent.document:type_name -> google.protobuf.Struct
	3,  // 6: linkall.connectors.database.UpdateEvent.updateDescription:type_name -> linkall.connectors.database.UpdateDescription
	8,  // 7: linkall.connectors.database.UpdateDescription.removedFields:type_name -> google.protobuf.ListValue
	8,  // 8: linkall.connectors.database.UpdateDescription.truncatedArrays:type_name -> google.protobuf.ListValue
	7,  // 9: linkall.connectors.database.UpdateDescription.updatedFields:type_name -> google.protobuf.Struct
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_database_mongodb_proto_init() }
func file_database_mongodb_proto_init() {
	if File_database_mongodb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_database_mongodb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_mongodb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_mongodb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_mongodb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_database_mongodb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_database_mongodb_proto_goTypes,
		DependencyIndexes: file_database_mongodb_proto_depIdxs,
		MessageInfos:      file_database_mongodb_proto_msgTypes,
	}.Build()
	File_database_mongodb_proto = out.File
	file_database_mongodb_proto_rawDesc = nil
	file_database_mongodb_proto_goTypes = nil
	file_database_mongodb_proto_depIdxs = nil
}
